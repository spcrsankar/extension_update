{"version":3,"file":"popup.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mCAAmC;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,oCAAoC;AACzE;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA,iCAAiC,QAAQ;AACzC;;;AAGA,sBAAsB,mCAAmC;AACzD;AACA;AACA,qCAAqC,uDAAuD;AAC5F;AACA,GAAG;AACH,CAAC;;;;;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,GAAG,WAAW,EAAE;AAC7C;AACA;;AAEA;AACA;;AAEA,CAAC","sources":["webpack://firstfl/./src/popup.js"],"sourcesContent":["const map = new Map()\ndocument.querySelector('button').addEventListener('click', () => { \n  document.querySelector('p').textContent = 'Solving....'\n  document.querySelector('tbody').innerHTML = ''\n  \n  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n    const tab = tabs[0];\n    let input_ele = document.querySelector('input[type=number]').valueAsNumber\n\n    if(!input_ele || input_ele < 2) {\n      input_ele = 2\n      document.querySelector('input[type=number]').value = 2\n    }\n    chrome.tabs.sendMessage(tab.id, {type: \"start\", ms: input_ele * 1000})\n  \n  })\n})\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  console.log(\"MIT\");\n  const {checked} = await chrome.storage.sync.get()\n  console.log(checked);\n  const span = document.querySelector('span') \n  span.setAttribute('data-toggle', checked ? 'ON' : 'OFF')\n  document.querySelector('input[type=checkbox]').checked = checked\n})\n\n\ndocument.querySelector('input[type=checkbox]').addEventListener('change', async e => {\n  const checked = e.target.checked\n  await chrome.storage.sync.set({checked})\n  document.querySelector('span').setAttribute('data-toggle', checked ? 'ON' : 'OFF')\n\n\n  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n    const tab = tabs[0]\n    const ms =  document.querySelector('input[type=number]').valueAsNumber\n    chrome.tabs.sendMessage(tab.id, {type: \"auto\", ok: checked, ms: (ms > 2 ? ms : 2)* 1000})\n  \n  })\n})\n\n\n\n\nchrome.runtime.onMessage.addListener((req, sender, res) => {\n  if(req.type === 'answer') {\n    document.querySelector('p').textContent = 'Solved. Please check the answer'\n    let answer = ''\n    for(let i of req.data){\n      const [ii,j] = Object.entries(i)[0]\n      if(!map.has(ii)){\n        map.set(ii, j)\n        answer += `<tr><td>${ii}</td><td>${j}</td></tr>`\n      }\n    }\n\n    document.querySelector('tbody').innerHTML += answer\n  }\n\n})\n"],"names":[],"sourceRoot":""}